name: github-action-status
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
      - uses: golangci/golangci-lint-action@v2
        with:
          version: v1.41
          args: --modules-download-mode=readonly
      - name: Test
        run: |
          cd ${{ github.workspace }} && go test -timeout=60s -covermode=count -coverprofile=${{ github.workspace }}/profile.cov_tmp ./...
          cat ${{ github.workspace }}/profile.cov_tmp | grep -v "_mock.go" > ${{ github.workspace }}/profile.cov
      - name: Submit coverage
        run: |
          GO111MODULE=off go get -u -v github.com/mattn/goveralls
          $(go env GOPATH)/bin/goveralls -service="github" -coverprofile=${{ github.workspace }}/profile.cov
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  release:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
      - name: Build
        run: |
          goos=("linux" "darwin" "windows")
          goarch=("amd64" "arm64")
          for os in "${goos[@]}"; do
            for arch in "${goarch[@]}"; do
              ext=`if [ $os == "windows" ]; then echo ".exe"; fi`;
              go build -o "releases/gas-${os}-${arch}${ext}" -ldflags "-X main.revision=${VERSION} -s -w" .
            done
          done
      - name: Get Tag name
        run: echo "TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags')
        uses: ncipollo/release-action@v1
        with:
          name: "${{ env.TAG }}"
          tag: "${{ env.TAG }}"
          body: |
            # `gas` @ ${{ env.TAG }}
          artifacts: "releases/gas-*"
          draft: true
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
